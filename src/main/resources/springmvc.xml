<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--配置json的格式转换输出和字符类型-->
    <!--注意！！！这里的 mvc:annotation-driven 只能有一个，不然不能返回集合到ajax里了-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!--设置json传中文-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="utf-8"/>
            </bean>
            <!--转换为json格式-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--放过静态文件 ，而且我们默认是Jsp解析器，其他不行，然后就用这个url路劲映射到对应的静态资源文件-->
    <mvc:resources mapping="/**" location="/WEB-INF/static/"/>
    <!--扫描注解-->
    <context:component-scan base-package="szxs.accp.controller,szxs.accp.biz"/>

    <!--配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--当我们url路径为/sys开头的时候就会被拦截-->
            <mvc:mapping path="/crm/*"/>
            <bean class="szxs.accp.interceptor.MyInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
